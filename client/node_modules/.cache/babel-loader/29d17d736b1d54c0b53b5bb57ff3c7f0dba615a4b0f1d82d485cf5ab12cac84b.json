{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahs\\\\projects\\\\todolist\\\\client\\\\src\\\\components\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputTodo = () => {\n  _s();\n  // useState hook to manage the description state\n  const [description, setDescription] = useState(\"\");\n\n  // Function to handle form submission\n  const onSubmitForm = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    try {\n      const body = {\n        description\n      }; // Create an object with the input description\n      // Make a POST request to add a new todo item\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body) // Convert body object to JSON string\n      });\n\n      // After adding, redirect to the home page\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message); // Log any errors to the console\n    }\n  };\n\n  // Render JSX for the InputTodo component\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-5\",\n      children: \"Peachy To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex mt-5\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \" ADD \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(InputTodo, \"h9D/T9lgpWSoHPGgGzJJBrwKHw4=\");\n_c = InputTodo;\nexport default InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","InputTodo","_s","description","setDescription","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/noahs/projects/todolist/client/src/components/InputTodo.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputTodo = () => {\r\n    // useState hook to manage the description state\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // Function to handle form submission\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission behavior\r\n        try {\r\n            const body = { description }; // Create an object with the input description\r\n            // Make a POST request to add a new todo item\r\n            const response = await fetch(\"http://localhost:5000/todos\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body) // Convert body object to JSON string\r\n            });\r\n\r\n            // After adding, redirect to the home page\r\n            window.location = \"/\";\r\n\r\n        } catch (err) {\r\n            console.error(err.message); // Log any errors to the console\r\n        }\r\n    };\r\n\r\n    // Render JSX for the InputTodo component\r\n    return (\r\n        <Fragment>\r\n            {/* Title for the Todo List */}\r\n            <h1 className=\"text-center mt-5\">Peachy To-do List</h1>\r\n            \r\n            {/* Form for adding a new todo */}\r\n            <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n                {/* Input field for entering todo description */}\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                />\r\n                \r\n                {/* Submit button to add the todo */}\r\n                <button className=\"btn btn-success\"> ADD </button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputTodo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI;MACA,MAAMC,IAAI,GAAG;QAAEL;MAAY,CAAC,CAAC,CAAC;MAC9B;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC;;MAEF;MACAO,MAAM,CAACC,QAAQ,GAAG,GAAG;IAEzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;IAChC;EACJ,CAAC;;EAED;EACA,oBACIpB,OAAA,CAACH,QAAQ;IAAAwB,QAAA,gBAELrB,OAAA;MAAIsB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvD1B,OAAA;MAAMsB,SAAS,EAAC,aAAa;MAACK,QAAQ,EAAEtB,YAAa;MAAAgB,QAAA,gBAEjDrB,OAAA;QACI4B,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,KAAK,EAAE1B,WAAY;QACnB2B,QAAQ,EAAExB,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACyB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAGF1B,OAAA;QAAQsB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEnB,CAAC;AAACxB,EAAA,CA7CID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}